apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gaia.fullname" . }}
  labels:
    {{- include "gaia.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "gaia.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "gaia.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "gaia.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: external-ip
          image: alpine/k8s:1.18.2
          command: ["/scripts/external-ip.sh", "gaia", "$MONIKER", '{{ include "gaia.fullname" . }}-external-ip']
          volumeMounts:
            - name: scripts
              mountPath: /scripts
          env:
            - name: MONIKER
              value: {{ .Values.gaia.env.moniker }}
        - name: setup
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          command: ["/scripts/setup.sh"]
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: data
              mountPath: /root
          env:
            - name: MONIKER
              value: {{ .Values.gaia.env.moniker }}
            - name: EXTERNAL_IP
              valueFrom:
                configMapKeyRef:
                  name: {{ include "gaia.fullname" . }}-external-ip
                  key: externalIP
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["gaiad", "start", "--p2p.seeds={{ .Values.gaia.args.p2p.seeds }}", "--x-crisis-skip-assert-invariants"]
          volumeMounts:
            - name: data
              mountPath: /root
          ports:
            - name: p2p
              containerPort: 26656
              protocol: TCP
            - name: rpc
              containerPort: 26657
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: 26656
            periodSeconds: 500
            failureThreshold: 2
          livenessProbe:
            tcpSocket:
              port: 26656
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 26656
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "gaia.fullname" . }}{{- end }}
      {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: scripts
        configMap:
          name: {{ include "gaia.fullname" . }}-scripts
          defaultMode: 0777
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
