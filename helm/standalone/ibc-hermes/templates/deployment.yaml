apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hermes-relayer.fullname" . }}
  labels:
    {{- include "hermes-relayer.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "hermes-relayer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "hermes-relayer.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "hermes-relayer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash"]
          args: ["-c", '/scripts/start.sh']
          env:
            - name: gaia_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: gaia_mnemonic
            - name: akash_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: akash_mnemonic
            - name: iris_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: iris_mnemonic
            - name: sentinel_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: sentinel_mnemonic
            - name: persistence_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: persistence_mnemonic
            - name: osmosis_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: osmosis_mnemonic
            - name: regen_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: regen_mnemonic
            - name: crypto_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: crypto_mnemonic
            - name: sifnode_mnemonic
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: sifnode_mnemonic
            - name: relayer_mapping
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: relayer_mapping
            - name: hermes_config_location
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: hermes_config_location
            - name: connection_mapping
              valueFrom:
                secretKeyRef:
                  name: {{ include "hermes-relayer.fullname" . }}-mnemonics
                  key: connection_mapping
          volumeMounts:
            - name: data
              mountPath: /root
            - name: scripts
              mountPath: /scripts
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "hermes-relayer.fullname" . }}{{- end }}
      {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: scripts
        configMap:
          name: {{ include "hermes-relayer.fullname" . }}-scripts
          defaultMode: 0777
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
