apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "-=app_name=-.fullname" . }}
  labels:
    {{- include "-=app_name=-.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "-=app_name=-.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "-=app_name=-.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "-=app_name=-.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          {{- range $key, $val := .Values.-=app_name=-.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh"]
          {{- if.Values.-=app_name=-.env.symbol_translator_file }}
          args: ["-c", "cat -=symbol_translator_file=- && while [ ! -f /vault/secrets/ebrelayer ]; do sleep 1; done && source /vault/secrets/ebrelayer && echo \"$mnemonic\" | sifnoded keys add $MONIKER --keyring-backend test --recover && ebrelayer init $nodeHost $ethWebsocketAddress $ethBridgeRegistryAddress $MONIKER \"$mnemonic\" --from $MONIKER --symbol-translator-file -=symbol_translator_file=- --chain-id $CHAINNET --node $nodeHost --gas $gas --keyring-backend test"]
          {{- else }}
          args: ["-c", "while [ ! -f /vault/secrets/ebrelayer ]; do sleep 1; done && source /vault/secrets/ebrelayer && echo \"$mnemonic\" | sifnoded keys add $MONIKER --keyring-backend test --recover && ebrelayer init $nodeHost $ethWebsocketAddress $ethBridgeRegistryAddress $MONIKER \"$mnemonic\" --from $MONIKER --chain-id $CHAINNET --node $nodeHost --gas $gas --keyring-backend test"]
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /relayerdb
            - name: mappingdata
              mountPath: -=symbol_translator_mountpath=-
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "-=app_name=-.fullname" . }}{{- end }}
        {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: mappingdata
        configMap:
          name: {{ include "-=app_name=-.fullname" . }}-ibc-mapping
          defaultMode: 0777
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}