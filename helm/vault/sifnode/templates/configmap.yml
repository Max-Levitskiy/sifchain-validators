apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "sifnode.fullname" . }}-scripts
data:
  external-ip.sh: |
    #!/bin/bash
    # ./external-ip.sh <service> <namespace> <config_map>

    apk add bind-tools

    SERVICE=$1
    NAMESPACE=$2
    CONFIGMAP=$3

    external_ip=""

    kubectl annotate svc $SERVICE service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled=false --overwrite
    sleep 5
    kubectl annotate svc $SERVICE service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled=true --overwrite

    while [ -z $external_ip ]; do
      echo "Waiting for load balancer external endpoint..."
      external_ip=$(kubectl get svc $SERVICE -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
      if [ -z $external_ip ]; then
        hostname=$(kubectl get svc $SERVICE -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        [ ! -z $hostname ] && external_ip=$(dig +short $hostname | sort | head -1)
      fi
      [ -z $external_ip ] && sleep 10
    done

    kubectl create configmap $CONFIGMAP --from-literal=externalIP=$external_ip --dry-run=client -o yaml | kubectl apply -f -

  fork.sh: |
    #!/bin/sh
    # ./fork.sh

    if [ ! -d ${HOME}/.sifnoded/cosmovisor/upgrades/${VERSION} ]; then
      exit 0
    fi

    if [ ! -d ${HOME}/.sifnoded/cosmovisor/upgrades/${CURRENT_VERSION} ]; then
      mkdir -p ${HOME}/.sifnoded/cosmovisor/upgrades/${CURRENT_VERSION}/bin
      cd ${HOME}/.sifnoded/cosmovisor/upgrades/${CURRENT_VERSION}/bin
      wget -O sifnoded.zip https://github.com/Sifchain/sifnode/releases/download/mainnet-${CURRENT_VERSION}/sifnoded-mainnet-${CURRENT_VERSION}-linux-amd64.zip
      unzip sifnoded.zip
    fi

    wget -O /usr/local/bin/migrate.sh https://raw.githubusercontent.com/Sifchain/networks/master/scripts/migrate.sh
    chmod +x /usr/local/bin/migrate.sh
    /usr/local/bin/migrate.sh -c ${CHAINNET} -s ${COSMOS_SDK_VERSION} -t ${GENESIS_TIME} -v ${VERSION} -w ${CURRENT_VERSION} -z ${DATA_MIGRATE_VERSION}

  start.sh: |
    #!/bin/sh
    # ./start.sh <minimum_gas_prices>

    MINIMUM_GAS_PRICES=$1
    if [ -z ${MINIMUM_GAS_PRICES} ]; then
      exit 1
    fi

    ADDITIONAL_ARGS=""
    if [ -f ${HOME}/.sifnoded/.upgraded ]; then
      ADDITIONAL_ARGS="--x-crisis-skip-assert-invariants"
    fi

    cosmovisor start --rpc.laddr tcp://0.0.0.0:26657 --minimum-gas-prices "${MINIMUM_GAS_PRICES}" "${ADDITIONAL_ARGS}"
